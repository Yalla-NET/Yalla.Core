<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
using System;
using System.Runtime.CompilerServices;

namespace Yalla
{
    /// <summary>
    /// Log interface.
    /// </summary>
    public interface ILog : IDisposable
    {
<#@ include file="Yalla.t4" #>
        /// <summary>
        /// Logs a new <#= levels[level] #> entry.
        /// </summary>
<#
		for (int j = 0; j < paramTypes.Count; ++j)
		{
#>
        /// <param name="<#= paramNames[j] #>"><#= paramDocs[j] #></param>
<#
		}
#>
		void <#= method #>(<#= paramList #>);

<#
	}
#>
        /// <summary>
        /// Gets a value indicating whether logging of <#= levels[level] #> entries is enabled.
        /// </summary>
        /// <value><c>true</c> if logging of <#= levels[level] #> entries is enabled.</value>
        bool Is<#= level #>Enabled { get; }

		#endregion <#= level #>

<#
}
#>
		#region Common Properties

        /// <summary>
        /// Gets the internal logger instance.
        /// </summary>
        /// <value>Internal logger instance.</value>
		ILogger Logger { get; }

        /// <summary>
        /// Gets the internal formatter instance.
        /// </summary>
        /// <value>Internal formatter instance.</value>
		ILogFormatter Formatter { get; }

		#endregion Common Properties
	}
}
